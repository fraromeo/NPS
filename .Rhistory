library(tidytext)
library(caret)
library(cowplot)
library(dplyr)
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
setwd("~/Documents/GitHub/NPS")
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
glimpse(details)
summary(details)
#### Cleaning Data ####
games <- details
names(games)
# Remove Sector Rank
games[c('Amiga.Rank', 'Atari.ST.Rank', 'Arcade.Rank', "Commodore.64.Rank", "Video.Game.Rank",
"Accessory.Rank", "RPG.Item.Rank" , "Children.s.Game.Rank", "Customizable.Rank", "War.Game.Rank",
"Thematic.Rank", "Abstract.Game.Rank", "Party.Game.Rank", "Board.Game.Rank", "Strategy.Game.Rank", "Family.Game.Rank")] <- NULL
# Remove useless features
games[c("X","thumbnail","image", "type", "alternate")] <- NULL
games[c("boardgameintegration", "boardgamecompilation", "boardgameimplementation", "boardgameexpansion")] <- NULL
# Always to 0
games[c("median")] <- NULL
names(games)
games = games %>%
dplyr::rename(year = yearpublished,
category = boardgamecategory,
mechanic = boardgamemechanic,
family = boardgamefamily,
designer = boardgamedesigner,
artist = boardgameartist,
publisher = boardgamepublisher,
numratings = usersrated,
name = primary
)
names(games)
#Games with published year = 0 -> fake
zero.year = games$year == 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
#### One Hot Encoding ####
games <- games %>%
filter(!is.na(category))
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) %>%
select(cat12)
games.sep2 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat22 = if_else(is.na(cat2), 'Not Av', cat2)) %>%
select(cat22)
games.sep3 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat32 = if_else(is.na(cat3), 'Not Av', cat3)) %>%
select(cat32)
remove_first5 <- function(name) {
new_name = substring(name, 6)
return (new_name)
}
ChangeColnames <- function(x) {
colnames(x) <- remove_first5(colnames(x))
x
}
catmat1 <- model.matrix(~cat12-1, games.sep1)
catmat1 <- ChangeColnames(catmat1)
catmat2 <- model.matrix(~cat22-1, games.sep2)
catmat2 <- ChangeColnames(catmat2)
catmat3 <- model.matrix(~cat32-1, games.sep3)
catmat3 <- ChangeColnames(catmat3)
df.cat1 <- data.frame(catmat1)
df.cat1$id <- games$id
df.cat2 <- data.frame(catmat2)
df.cat2$id <- games$id
df.cat3 <- data.frame(catmat3)
df.cat3$id <- games$id
# add rownames as a column in each data.frame and bind rows
dm <-bind_rows(df.cat1,
df.cat2,
df.cat3
) %>%
# evaluate following calls for each value in the rowname column
group_by(id) %>%
# add all non-grouping variables
summarise_all(sum)
##### JOIN GAMES AND CATEGORY DATASET ####
dm$V1 <- NULL
games <- merge(games,dm, by='id')
games = games %>%
rename(
Childrens.Game = X.Childrens.Game.
)
games = games[, colSums(is.na(games)) != nrow(games)]
tab = colSums(games[,c(31:106)])
few_sample = names(tab)[tab < 73]
games[,few_sample] <- NULL
#games[,c(31:100)] <- factor(games[,c(31:100)])
saveRDS(games, file='data.RDS')
summary(games)
games[games['Name'] == 'Dany']
games[games['Name'] == 'Dany',]
games['name'=='Dany']
games['name'=='dany']
View(games)
games[,'suggested_num_players']
df_bivariate = games[,c('average','numratings')]
depthContour(df_bivariate, depth_params = list(method = 'Tukey'))
library(MASS)
library(rgl)
library(DepthProc)
library(hexbin)
library(packagefinder)
library(aplpack)
library(robustbase)
depthContour(df_bivariate, depth_params = list(method = 'Tukey'))
plot(df_bivariate)
df_bivariate = games[,c('average','averageweight')]
df_bivariate = games[,c('averageweight','average')]
plot(df_bivariate)
depthContour(df_bivariate, depth_params = list(method = 'Tukey'))
bagplot(df_bivariate)
df_bivariate[df_bivariate[,'averageweight'] == 0]
df_bivariate[df_bivariate[,'averageweight'] == 0]
df_bivariate[,'averageweight'] == 0
games[df_bivariate[,'averageweight'] == 0,'name']
head(games[df_bivariate[,'averageweight'] == 0,c('name', 'year')],15)
min(games[df_bivariate[,'averageweight'] == 0,'year'],15))
min(games[df_bivariate[,'averageweight'] == 0,'year'])
boxplot(games[df_bivariate[,'averageweight'] == 0,'year'])
zero.year = games$year <= 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
boxplot(games[df_bivariate[,'averageweight'] == 0,'year'])
hist(games[df_bivariate[,'averageweight'] == 0,'year'])
head(games[df_bivariate[,'averageweight'] == 0,'name'],20)
hist(games[df_bivariate[,'averageweight'] == 0,'numratings'])
length(games[df_bivariate[,'averageweight'] == 0,])
length(games[df_bivariate[,'averageweight'],])
dim(games[df_bivariate[,'averageweight'],])
dim(games[df_bivariate[,'averageweight'] == 0,])
dim(games[df_bivariate[,'averageweight'] == 0 && df_bivariate[,'numratings'] >50,])
dim(games[df_bivariate[,'averageweight'] == 0 & df_bivariate[,'numratings'] >50,])
dim(games[games[,'averageweight'] == 0 & games[,'numratings'] >50,])
games[games[,'averageweight'] == 0 & games[,'numratings'] >20000,])
games[games[,'averageweight'] == 0 & games[,'numratings'] >20000,]
head(games[games[,'averageweight'] == 0 & games[,'numratings'] >2000,])
head(games[games[,'averageweight'] == 0 & games[,'numratings'] >2000,'name'])
head(games[games[,'numratings'] >2000,'name'])
head(games[games[,'numratings'] >20000,'name'])
df = games[games[,'numratings'] >20000,'name']
head(df)
df = games[games[,'numratings'] >20000,c('name','averageweight')]
head(df)
df[df[,'averageweight']==0,]
hist(games[games[,'averageweight'] == 0,'numratings'])
depthContour(games[,c('numratings','averageweight')], depth_params = list(method = 'Tukey'))
bagplot(games[,c('numratings','averageweight')], depth_params = list(method = 'Tukey'))
bagplot(games[,c('numweights','averageweight')], depth_params = list(method = 'Tukey'))
bagplot(games[,c('numweights','averageweight')], depth_params = list(method = 'mahalanobis'))
plot(games[,'numweights'],games[,'averageweight'])
games[games[,'numweights'] == 0,'averageweight']
games <- games[-games[,'numweights'] == 0,]
dim(games)
rm (list = ls())
tilda = '~' # clown
# Libraries
library(tidyverse)
library(tidytext)
library(caret)
library(cowplot)
library(dplyr)
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
glimpse(details)
summary(details)
#### Cleaning Data ####
games <- details
names(games)
# Remove Sector Rank
games[c('Amiga.Rank', 'Atari.ST.Rank', 'Arcade.Rank', "Commodore.64.Rank", "Video.Game.Rank",
"Accessory.Rank", "RPG.Item.Rank" , "Children.s.Game.Rank", "Customizable.Rank", "War.Game.Rank",
"Thematic.Rank", "Abstract.Game.Rank", "Party.Game.Rank", "Board.Game.Rank", "Strategy.Game.Rank", "Family.Game.Rank")] <- NULL
# Remove useless features
games[c("X","thumbnail","image", "type", "alternate")] <- NULL
games[c("boardgameintegration", "boardgamecompilation", "boardgameimplementation", "boardgameexpansion")] <- NULL
# Always to 0
games[c("median")] <- NULL
names(games)
games = games %>%
dplyr::rename(year = yearpublished,
category = boardgamecategory,
mechanic = boardgamemechanic,
family = boardgamefamily,
designer = boardgamedesigner,
artist = boardgameartist,
publisher = boardgamepublisher,
numratings = usersrated,
name = primary
)
names(games)
#Games with published year = 0 -> fake
zero.year = games$year <= 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
#### One Hot Encoding ####
games <- games %>%
filter(!is.na(category))
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) %>%
select(cat12)
games.sep2 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat22 = if_else(is.na(cat2), 'Not Av', cat2)) %>%
select(cat22)
games.sep3 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat32 = if_else(is.na(cat3), 'Not Av', cat3)) %>%
select(cat32)
remove_first5 <- function(name) {
new_name = substring(name, 6)
return (new_name)
}
ChangeColnames <- function(x) {
colnames(x) <- remove_first5(colnames(x))
x
}
catmat1 <- model.matrix(~cat12-1, games.sep1)
catmat1 <- ChangeColnames(catmat1)
catmat2 <- model.matrix(~cat22-1, games.sep2)
catmat2 <- ChangeColnames(catmat2)
catmat3 <- model.matrix(~cat32-1, games.sep3)
catmat3 <- ChangeColnames(catmat3)
df.cat1 <- data.frame(catmat1)
df.cat1$id <- games$id
df.cat2 <- data.frame(catmat2)
df.cat2$id <- games$id
df.cat3 <- data.frame(catmat3)
df.cat3$id <- games$id
# add rownames as a column in each data.frame and bind rows
dm <-bind_rows(df.cat1,
df.cat2,
df.cat3
) %>%
# evaluate following calls for each value in the rowname column
group_by(id) %>%
# add all non-grouping variables
summarise_all(sum)
##### JOIN GAMES AND CATEGORY DATASET ####
dm$V1 <- NULL
games <- merge(games,dm, by='id')
games = games %>%
rename(
Childrens.Game = X.Childrens.Game.
)
games = games[, colSums(is.na(games)) != nrow(games)]
tab = colSums(games[,c(31:106)])
few_sample = names(tab)[tab < 73]
games[,few_sample] <- NULL
rm (list = ls())
tilda = '~' # clown
# Libraries
library(tidyverse)
library(tidytext)
library(caret)
library(cowplot)
library(dplyr)
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
#### Cleaning Data ####
games <- details
names(games)
# Remove Sector Rank
games[c('Amiga.Rank', 'Atari.ST.Rank', 'Arcade.Rank', "Commodore.64.Rank", "Video.Game.Rank",
"Accessory.Rank", "RPG.Item.Rank" , "Children.s.Game.Rank", "Customizable.Rank", "War.Game.Rank",
"Thematic.Rank", "Abstract.Game.Rank", "Party.Game.Rank", "Board.Game.Rank", "Strategy.Game.Rank", "Family.Game.Rank")] <- NULL
# Remove useless features
games[c("X","thumbnail","image", "type", "alternate")] <- NULL
games[c("boardgameintegration", "boardgamecompilation", "boardgameimplementation", "boardgameexpansion")] <- NULL
# Always to 0
games[c("median")] <- NULL
names(games)
games = games %>%
dplyr::rename(year = yearpublished,
category = boardgamecategory,
mechanic = boardgamemechanic,
family = boardgamefamily,
designer = boardgamedesigner,
artist = boardgameartist,
publisher = boardgamepublisher,
numratings = usersrated,
name = primary
)
names(games)
#Games with published year = 0 -> fake
zero.year = games$year <= 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
games <- games %>%
filter(!is.na(category))
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) %>%
select(cat12)
rm (list = ls())
tilda = '~' # clown
# Libraries
library(tidyverse)
library(tidytext)
library(caret)
library(cowplot)
library(dplyr)
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
glimpse(details)
summary(details)
#### Cleaning Data ####
games <- details
names(games)
# Remove Sector Rank
games[c('Amiga.Rank', 'Atari.ST.Rank', 'Arcade.Rank', "Commodore.64.Rank", "Video.Game.Rank",
"Accessory.Rank", "RPG.Item.Rank" , "Children.s.Game.Rank", "Customizable.Rank", "War.Game.Rank",
"Thematic.Rank", "Abstract.Game.Rank", "Party.Game.Rank", "Board.Game.Rank", "Strategy.Game.Rank", "Family.Game.Rank")] <- NULL
# Remove useless features
games[c("X","thumbnail","image", "type", "alternate")] <- NULL
games[c("boardgameintegration", "boardgamecompilation", "boardgameimplementation", "boardgameexpansion")] <- NULL
# Always to 0
games[c("median")] <- NULL
names(games)
games = games %>%
dplyr::rename(year = yearpublished,
category = boardgamecategory,
mechanic = boardgamemechanic,
family = boardgamefamily,
designer = boardgamedesigner,
artist = boardgameartist,
publisher = boardgamepublisher,
numratings = usersrated,
name = primary
)
names(games)
#Games with published year = 0 -> fake
zero.year = games$year <= 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
games <- games %>%
filter(!is.na(category))
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) %>%
select(cat12)
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) #%>%
games.sep1 = games.sep1$cat12
rm (list = ls())
tilda = '~' # clown
# Libraries
library(tidyverse)
library(tidytext)
library(caret)
library(cowplot)
library(dplyr)
details <-read.csv('games_detailed_info.csv') %>%
mutate(boardgamecategory = gsub("\\[", "", boardgamecategory), boardgamecategory = gsub("\\]", "", boardgamecategory), boardgamecategory = gsub(" \\/ ", "", boardgamecategory), boardgamecategory=gsub("\\/", "", boardgamecategory), boardgamecategory=gsub("'", "", boardgamecategory),
boardgamemechanic = gsub("\\[", "", boardgamemechanic), boardgamemechanic = gsub("\\]", "", boardgamemechanic), boardgamemechanic = gsub(" \\/ ", "", boardgamemechanic), boardgamemechanic=gsub("\\/", "", boardgamemechanic), boardgamemechanic=gsub("'", "", boardgamemechanic),
boardgamefamily = gsub("\\[", "", boardgamefamily), boardgamefamily = gsub("\\]", "", boardgamefamily), boardgamefamily = gsub(" \\/ ", "", boardgamefamily), boardgamefamily=gsub("\\/", "", boardgamefamily), boardgamefamily=gsub("'", "", boardgamefamily),
boardgamepublisher = gsub("\\[", "", boardgamepublisher), boardgamepublisher = gsub("\\]", "", boardgamepublisher), boardgamepublisher = gsub(" \\/ ", "", boardgamepublisher), boardgamepublisher=gsub("\\/", "", boardgamepublisher), boardgamefamily=gsub("'", "", boardgamepublisher))
glimpse(details)
summary(details)
#### Cleaning Data ####
games <- details
names(games)
# Remove Sector Rank
games[c('Amiga.Rank', 'Atari.ST.Rank', 'Arcade.Rank', "Commodore.64.Rank", "Video.Game.Rank",
"Accessory.Rank", "RPG.Item.Rank" , "Children.s.Game.Rank", "Customizable.Rank", "War.Game.Rank",
"Thematic.Rank", "Abstract.Game.Rank", "Party.Game.Rank", "Board.Game.Rank", "Strategy.Game.Rank", "Family.Game.Rank")] <- NULL
# Remove useless features
games[c("X","thumbnail","image", "type", "alternate")] <- NULL
games[c("boardgameintegration", "boardgamecompilation", "boardgameimplementation", "boardgameexpansion")] <- NULL
# Always to 0
games[c("median")] <- NULL
names(games)
games = games %>%
dplyr::rename(year = yearpublished,
category = boardgamecategory,
mechanic = boardgamemechanic,
family = boardgamefamily,
designer = boardgamedesigner,
artist = boardgameartist,
publisher = boardgamepublisher,
numratings = usersrated,
name = primary
)
names(games)
#Games with published year = 0 -> fake
zero.year = games$year <= 0
games[zero.year ,c('name')] # they are clearly more recent -> not trustworthy
games = games[!zero.year,]
games <- games %>%
filter(!is.na(category))
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) #%>%
games.sep1 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat12 = if_else(is.na(cat1), 'Not Av', cat1)) %>%
select(cat12)
games.sep2 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat22 = if_else(is.na(cat2), 'Not Av', cat2)) %>%
select(cat22)
games.sep3 <- games %>%
separate(category, c('cat1', 'cat2', 'cat3'), sep = ", ") %>%
mutate(cat32 = if_else(is.na(cat3), 'Not Av', cat3)) %>%
select(cat32)
remove_first5 <- function(name) {
new_name = substring(name, 6)
return (new_name)
}
ChangeColnames <- function(x) {
colnames(x) <- remove_first5(colnames(x))
x
}
catmat1 <- model.matrix(~cat12-1, games.sep1)
catmat1 <- ChangeColnames(catmat1)
catmat2 <- model.matrix(~cat22-1, games.sep2)
catmat2 <- ChangeColnames(catmat2)
catmat3 <- model.matrix(~cat32-1, games.sep3)
catmat3 <- ChangeColnames(catmat3)
df.cat1 <- data.frame(catmat1)
df.cat1$id <- games$id
df.cat2 <- data.frame(catmat2)
df.cat2$id <- games$id
df.cat3 <- data.frame(catmat3)
df.cat3$id <- games$id
# add rownames as a column in each data.frame and bind rows
dm <-bind_rows(df.cat1,
df.cat2,
df.cat3
) %>%
# evaluate following calls for each value in the rowname column
group_by(id) %>%
# add all non-grouping variables
summarise_all(sum)
dm$V1 <- NULL
games <- merge(games,dm, by='id')
games = games %>%
rename(
Childrens.Game = X.Childrens.Game.
)
games = games[, colSums(is.na(games)) != nrow(games)]
tab = colSums(games[,c(31:106)])
few_sample = names(tab)[tab < 73]
games[,few_sample] <- NULL
# further cleaning
games <- games[!games[,'numweights'] == 0,]
dim(games)
plot(games$averageweight, games$average)
bagplot(games[,c('averageweight','average')],depth_params = list(method = 'Tukey') )
library(DepthProc)
bagplot(games[,c('averageweight','average')],depth_params = list(method = 'Tukey') )
library(MASS)
library(rgl)
library(DepthProc)
library(hexbin)
library(packagefinder)
library(aplpack)
library(robustbase)
bagplot(games[,c('averageweight','average')],depth_params = list(method = 'Tukey') )
bagplot_games <- bagplot(games[,c('averageweight','average')],depth_params = list(method = 'Tukey') )
bagplot_games$pxy.outlier
outlying_obs <- bagplot_games$pxy.outlier
ind_outlying_obs <- which(apply(games,1,function(x) all(x %in% outlying_obs)))
help(bagplot)
ind_outlying_obs <- which(apply(games[,c('averageweight','average')],1,function(x) all(x %in% outlying_obs)))
games[ind_outlying_obs,'name']
depthMedian(games[,c('averageweight','average')])
median(games$average)
help("depthContour")
help("depthPersp")
bagplot.pairs(games[,c('averageweight','numratings','numweights')])
bagplot(games[,c('numratings','numweights')])
out <- bagplot(games[,c('numratings','numweights')])
out <- out$pxy.outlier
dim(out)
help("bagplot")
bagplot(games[,c('numratings','numweights')], show.whiskers = FALSE)
bagplot(games[games[,'numratings'] < 2000,c('numratings','numweights')], show.whiskers = FALSE)
dim(games[,'numratings'] < 2000)
dim(games[games[,'numratings'] < 2000,])
View(games)
d <- depth(games[,c("averageweight","numratings","numweights","playingtime","minplayers","maxplayers")])
hist(d)
d <- depth(games[,c("averageweight","numratings","numweights","playingtime","minplayers","maxplayers")], method = 'Tukey' )
hist(d)
help("depth")
head(d)
